{"version":3,"file":"dnapayments.js","mappings":"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","sources":["webpack://wc-dnapayments/./client/blocks/components/credit-card-fields.js","webpack://wc-dnapayments/./client/blocks/constants.js","webpack://wc-dnapayments/./client/blocks/hooks/use-payment-form.js","webpack://wc-dnapayments/./client/blocks/utils/create-hosted-fields.js","webpack://wc-dnapayments/./client/blocks/utils/create-modal.js","webpack://wc-dnapayments/./client/blocks/utils/get_settings.js","webpack://wc-dnapayments/./client/blocks/utils/log.js","webpack://wc-dnapayments/./client/blocks/utils/place-order-button.js","webpack://wc-dnapayments/./client/blocks/utils/try-parse.js","webpack://wc-dnapayments/external window \"React\"","webpack://wc-dnapayments/external window [\"wc\",\"blocksCheckout\"]","webpack://wc-dnapayments/external window [\"wc\",\"wcBlocksRegistry\"]","webpack://wc-dnapayments/external window [\"wc\",\"wcSettings\"]","webpack://wc-dnapayments/external window [\"wp\",\"data\"]","webpack://wc-dnapayments/external window [\"wp\",\"element\"]","webpack://wc-dnapayments/external window [\"wp\",\"htmlEntities\"]","webpack://wc-dnapayments/external window [\"wp\",\"i18n\"]","webpack://wc-dnapayments/webpack/bootstrap","webpack://wc-dnapayments/webpack/runtime/compat get default export","webpack://wc-dnapayments/webpack/runtime/define property getters","webpack://wc-dnapayments/webpack/runtime/hasOwnProperty shorthand","webpack://wc-dnapayments/webpack/runtime/make namespace object","webpack://wc-dnapayments/./client/blocks/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n'\nimport { useState, useEffect, useRef } from '@wordpress/element'\nimport { ValidationInputError } from '@woocommerce/blocks-checkout'\n\n/**\n * Internal dependencies\n */\nimport { HOSTED_FIELD_IDS, TEXT_DOMAIN } from '../constants'\nimport { getDnaPaymentsSettingsData } from '../utils/get_settings'\nimport { createHostedFields } from '../utils/create-hosted-fields'\nimport { createModal } from '../utils/create-modal'\nimport { setPlaceOrderButtonDisabled } from '../utils/place-order-button'\n\n/**\n * Render the credit card fields.\n *\n * @param {Object} props Incoming props\n */\nexport const DnapaymentsCreditCardFields = ({\n    props,\n    isLoaded = false,\n    hostedFieldsInstance = null,\n    onLoad = () => {},\n}) => {\n    const {\n        components: { LoadingMask },\n        token = null,\n    } = props\n\n    const mounted = useRef(false)\n    const threeDSRef = useRef()\n    const [isCvvTokenVisible, setIsCvvTokenVisible] = useState(false)\n\n    const [error, setError] = useState({\n        name: '',\n        number: '',\n        expirationDate: '',\n        cvv: '',\n    })\n\n    const setupIntegration = async () => {\n        const { isTestMode, tempToken, cards } = getDnaPaymentsSettingsData()\n        const selectedCard = cards.find((c) => String(c.id) === String(token))\n\n        setPlaceOrderButtonDisabled(true)\n\n        threeDSRef.current = createModal(HOSTED_FIELD_IDS.threeDS)\n        hostedFieldsInstance = await createHostedFields({\n            isTest: isTestMode,\n            accessToken: tempToken,\n            threeDSModal: threeDSRef.current,\n            domElements: {\n                number: document.getElementById(HOSTED_FIELD_IDS.number),\n                name: document.getElementById(HOSTED_FIELD_IDS.name),\n                expDate: document.getElementById(HOSTED_FIELD_IDS.expDate),\n                cvv: document.getElementById(HOSTED_FIELD_IDS.cvv),\n                cvvToken: document.getElementById(HOSTED_FIELD_IDS.cvvToken),\n            },\n        })\n\n        if (selectedCard) {\n            const cvvState = hostedFieldsInstance.getTokenizedCardCvvState(selectedCard)\n            setIsCvvTokenVisible(cvvState === 'required')\n            hostedFieldsInstance.selectCard(selectedCard)\n        }\n\n        setPlaceOrderButtonDisabled(false)\n\n        onLoad(hostedFieldsInstance)\n    }\n\n    useEffect(() => {\n        const { cards } = getDnaPaymentsSettingsData()\n        if (token && hostedFieldsInstance) {\n            const selectedCard = cards.find((c) => String(c.id) === String(token))\n            if (selectedCard) {\n                const cvvState = hostedFieldsInstance.getTokenizedCardCvvState(selectedCard)\n                setIsCvvTokenVisible(cvvState === 'required')\n                hostedFieldsInstance.selectCard(selectedCard)\n            }\n        }\n    }, [token])\n\n    useEffect(() => {\n        mounted.current = true\n\n        setTimeout(() => {\n            if (mounted.current) {\n                setupIntegration()\n            }\n        }, 100)\n\n        return () => {\n            mounted.current = false\n            if (hostedFieldsInstance) {\n                hostedFieldsInstance.destroy()\n            }\n            if (threeDSRef.current) {\n                threeDSRef.current.remove()\n                threeDSRef.current = null\n            }\n            onLoad(null)\n        }\n    }, [])\n\n    return (\n        <LoadingMask isLoading={!isLoaded} showSpinner={true}>\n            <div className='wc-block-dnapayments-card-elements' style={{ display: !token ? 'flex' : 'none' }}>\n                <div className='wc-block-gateway-container'>\n                    <div id={HOSTED_FIELD_IDS.number} className={`wc-block-gateway-input empty`} />\n                    <label htmlFor={HOSTED_FIELD_IDS.number}>{__('Card number', TEXT_DOMAIN)}</label>\n                    <ValidationInputError errorMessage={error.number} />\n                </div>\n\n                <div className='wc-block-gateway-container'>\n                    <div id={HOSTED_FIELD_IDS.name} className={`wc-block-gateway-input empty`} />\n                    <label htmlFor={HOSTED_FIELD_IDS.name}>{__('Cardholder name', TEXT_DOMAIN)}</label>\n                    <ValidationInputError errorMessage={error.name} />\n                </div>\n\n                <div className='wc-block-gateway-container wc-block-dnapayments-card-element-small'>\n                    <div id={HOSTED_FIELD_IDS.expDate} className='wc-block-gateway-input empty' />\n                    <label htmlFor={HOSTED_FIELD_IDS.expDate}>{__('Expiry date (MMYY)', TEXT_DOMAIN)}</label>\n                    <ValidationInputError errorMessage={error.expirationDate} />\n                </div>\n\n                <div className='wc-block-gateway-container wc-block-dnapayments-card-element-small'>\n                    <div id={HOSTED_FIELD_IDS.cvv} className='wc-block-gateway-input empty' />\n                    <label htmlFor={HOSTED_FIELD_IDS.cvv}>{__('Card code (CVC)', TEXT_DOMAIN)}</label>\n                    <ValidationInputError errorMessage={error.cvv} />\n                </div>\n            </div>\n\n            <div\n                className='wc-block-dnapayments-card-elements'\n                style={{ display: isCvvTokenVisible ? 'flex' : 'none' }}\n            >\n                <div className='wc-block-gateway-container wc-block-dnapayments-card-element-small'>\n                    <div id={HOSTED_FIELD_IDS.cvvToken} className='wc-block-gateway-input empty' />\n                    <label htmlFor={HOSTED_FIELD_IDS.cvvToken}>{__('Card code (CVC)', TEXT_DOMAIN)}</label>\n                    <ValidationInputError errorMessage={error.cvv} />\n                </div>\n            </div>\n        </LoadingMask>\n    )\n}\n","export const GATEWAY_ID = 'dnapayments'\nexport const GATEWAY_ID_GOOGLE_PAY = 'dnapayments_google_pay'\nexport const GATEWAY_ID_APPLE_PAY = 'dnapayments_apple_pay'\nexport const GATEWAY_ID_CREDIT_CARD = 'dnapayments_credit_card'\n\nexport const TEXT_DOMAIN = 'woocommerce-gateway-dna'\n\nexport const HOSTED_FIELD_IDS = {\n    number: `wc-${GATEWAY_ID}-card-number-hosted`,\n    name: `wc-${GATEWAY_ID}-card-name-hosted`,\n    expDate: `wc-${GATEWAY_ID}-expiry-hosted`,\n    cvv: `wc-${GATEWAY_ID}-csc-hosted`,\n    cvvToken: `wc-${GATEWAY_ID}-csc-token-hosted`,\n    threeDS: 'three-d-secure',\n}\n\nexport const CONTAINER_IDS = {\n    googlepay: 'dnapayments_google_pay_container',\n    applepay: 'dnapayments_apple_pay_container',\n}\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n'\nimport { useEffect } from '@wordpress/element'\n\n/**\n * Internal dependencies\n */\nimport { TEXT_DOMAIN } from '../constants'\nimport { getDnaPaymentsSettingsData } from '../utils/get_settings'\nimport { logError } from '../utils/log'\nimport { tryParse } from '../utils/try-parse'\n\nexport const usePaymentForm = ({ props, hostedFieldsInstance }) => {\n    const {\n        emitResponse,\n        eventRegistration: { onCheckoutSuccess },\n        shouldSavePayment,\n    } = props\n    const { isTestMode, integrationType, allowSavingCards, cards } = getDnaPaymentsSettingsData()\n\n    useEffect(() => {\n        const handler = ({ processingResponse: { paymentDetails } }) =>\n            new Promise((resolve) => {\n                const paymentData = tryParse(paymentDetails.paymentData)\n                const auth = tryParse(paymentDetails.auth)\n                const merchantCustomData = tryParse(paymentData.merchantCustomData) || {}\n                const { returnUrl } = paymentData.paymentSettings\n\n                switch (integrationType) {\n                    case 'hosted-fields': {\n                        window.DNAPayments.configure({ isTestMode, cards, allowSavingCards })\n\n                        hostedFieldsInstance\n                            .submit({\n                                paymentData: {\n                                    ...paymentData,\n                                    merchantCustomData: JSON.stringify({\n                                        ...merchantCustomData,\n                                        storeCardOnFile: shouldSavePayment,\n                                    }),\n                                },\n                                token: auth.access_token,\n                            })\n                            .then(() => {\n                                resolve({\n                                    type: emitResponse.responseTypes.SUCCESS,\n                                    messageContext: emitResponse.noticeContexts.PAYMENTS,\n                                })\n\n                                window.location.href = returnUrl\n                            })\n                            .catch((err) => {\n                                logError(err)\n                                let message = err.message\n\n                                if (err.code !== 'INVALID_CARD_DATA') {\n                                    hostedFieldsInstance.clear()\n                                    message = __(\n                                        'Your card has not been authorised, please check the details and retry or contact your bank.',\n                                        TEXT_DOMAIN,\n                                    )\n                                }\n\n                                resolve({\n                                    type: emitResponse.responseTypes.ERROR,\n                                    message,\n                                    messageContext: emitResponse.noticeContexts.PAYMENTS,\n                                })\n                            })\n                        break\n                    }\n                    case 'embedded': {\n                        window.DNAPayments.configure({\n                            isTestMode,\n                            cards,\n                            allowSavingCards,\n                            events: {\n                                cancelled: () =>\n                                    resolve({\n                                        type: emitResponse.responseTypes.ERROR,\n                                        message: __(\n                                            'You have cancelled the payment process. Please try again if you wish to complete the order.',\n                                            TEXT_DOMAIN,\n                                        ),\n                                        messageContext: emitResponse.noticeContexts.PAYMENTS,\n                                    }),\n                                paid: () =>\n                                    resolve({\n                                        type: emitResponse.responseTypes.SUCCESS,\n                                        messageContext: emitResponse.noticeContexts.PAYMENTS,\n                                    }),\n                                declined: () =>\n                                    resolve({\n                                        type: emitResponse.responseTypes.ERROR,\n                                        message: __('Your payment proccess has been failed.', TEXT_DOMAIN),\n                                        messageContext: emitResponse.noticeContexts.PAYMENTS,\n                                    }),\n                            },\n                        })\n\n                        window.DNAPayments.openPaymentIframeWidget({ ...paymentData, auth })\n                        break\n                    }\n                    default: {\n                        window.DNAPayments.configure({ isTestMode, cards, allowSavingCards })\n                        window.DNAPayments.openPaymentPage({ ...paymentData, auth })\n                    }\n                }\n            })\n\n        return onCheckoutSuccess(handler)\n    }, [onCheckoutSuccess, hostedFieldsInstance])\n}\n","import { logError } from './log'\n\nexport async function createHostedFields({\n    isTest,\n    accessToken,\n    threeDSModal,\n    domElements: { number, name, expDate, cvv, cvvToken },\n}) {\n    const fields = {\n        cardholderName: {\n            container: name,\n            placeholder: 'ABC',\n        },\n        cardNumber: {\n            container: number,\n            placeholder: '1234 1234 1234 1234',\n        },\n        expirationDate: {\n            container: expDate,\n            placeholder: 'MM / YY',\n        },\n        cvv: {\n            container: cvv,\n            placeholder: 'CVC',\n        },\n        tokenizedCardCvv: {\n            container: cvvToken,\n            placeholder: 'CVC',\n        },\n    }\n\n    const options = {\n        isTest,\n        accessToken,\n        styles: {\n            input: {\n                'font-size': '14px',\n                'font-family': 'Open Sans',\n            },\n            '::placeholder': {\n                opacity: '0',\n            },\n            'input:focus::placeholder': {\n                opacity: '0.5',\n            },\n        },\n        styleConfig: {\n            containerClasses: {\n                FOCUSED: 'focused',\n                INVALID: 'has-error',\n            },\n        },\n        fontNames: ['Open Sans'],\n        threeDSecure: {\n            container: threeDSModal.body,\n        },\n        fields,\n    }\n\n    try {\n        const hostedFieldsInstance = await window.dnaPayments.hostedFields.create(options)\n\n        hostedFieldsInstance.on('blur', function ({ fieldKey, fieldsState }) {\n            const fieldContainer = fields[fieldKey]?.container\n            const isEmpty = fieldsState[fieldKey]?.isEmpty\n\n            if (fieldContainer) {\n                fieldContainer.classList.toggle('empty', isEmpty)\n            }\n        })\n\n        hostedFieldsInstance.on('dna-payments-three-d-secure-show', (data) => {\n            if (threeDSModal) {\n                threeDSModal.show()\n            }\n        })\n\n        hostedFieldsInstance.on('dna-payments-three-d-secure-hide', () => {\n            if (threeDSModal) {\n                threeDSModal.hide()\n            }\n        })\n\n        return hostedFieldsInstance\n    } catch (err) {\n        logError(err)\n        throw new Error('Your card has not been authorised, please check the details and retry or contact your bank.')\n    }\n}\n","export function createModal(id) {\n    // Create modal elements\n    const modalContainer = document.createElement('div')\n    modalContainer.className = 'dna-modal-container'\n    modalContainer.id = id\n\n    const modal = document.createElement('div')\n    modal.className = 'dna-modal'\n\n    const modalBody = document.createElement('div')\n    modalBody.className = 'dna-modal-body'\n\n    // Append elements\n    modal.appendChild(modalBody)\n    modalContainer.appendChild(modal)\n    document.body.appendChild(modalContainer)\n\n    return {\n        show: () => modalContainer.classList.add('open'),\n        hide: () => modalContainer.classList.remove('open'),\n        remove: () => modalContainer.remove(),\n        body: modalBody,\n    }\n}\n","import { getPaymentMethodData } from '@woocommerce/settings'\n\nimport { GATEWAY_ID } from '../constants'\n\nexport const getDnaPaymentsSettingsData = () => {\n    const settings = getPaymentMethodData(GATEWAY_ID, {})\n    return {\n        isTestMode: settings.is_test_mode,\n        integrationType: settings.integration_type,\n        tempToken: settings.temp_token,\n        terminalId: settings.terminal_id,\n        allowSavingCards: settings.allow_saving_cards,\n        cards: settings.cards,\n    }\n}\n","export function logError(...args) {\n    console.error(...args)\n}\n\nexport function logData(...args) {\n    console.log(...args)\n}\n","export function setPlaceOrderButtonDisabled(isDisabled) {\n    const placeOrderButton = getPlaceOrderButton()\n\n    if (!placeOrderButton) {\n        return\n    }\n\n    if (isDisabled) {\n        placeOrderButton.setAttribute('disabled', 'disabled')\n    } else {\n        placeOrderButton.removeAttribute('disabled')\n    }\n}\n\nexport function triggerPlaceOrderButtonClick() {\n    const placeOrderButton = getPlaceOrderButton()\n\n    if (placeOrderButton) {\n        placeOrderButton.removeAttribute('disabled')\n        placeOrderButton.click()\n    }\n}\n\nexport function getPlaceOrderButton() {\n    return document.querySelector('button.wc-block-components-checkout-place-order-button')\n}\n","import { logError } from './log'\n\nexport const tryParse = (str) => {\n    try {\n        return JSON.parse(str)\n    } catch (err) {\n        logError(err)\n        return null\n    }\n}\n","module.exports = window[\"React\"];","module.exports = window[\"wc\"][\"blocksCheckout\"];","module.exports = window[\"wc\"][\"wcBlocksRegistry\"];","module.exports = window[\"wc\"][\"wcSettings\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * External dependencies\n */\nimport { registerPaymentMethod } from '@woocommerce/blocks-registry'\nimport { __ } from '@wordpress/i18n'\nimport { select } from '@wordpress/data'\nimport { useState, RawHTML } from '@wordpress/element'\nimport { getPaymentMethodData } from '@woocommerce/settings'\nimport { decodeEntities } from '@wordpress/html-entities'\n\n/**\n * Internal dependencies\n */\nimport { GATEWAY_ID, TEXT_DOMAIN } from './constants'\nimport { DnapaymentsCreditCardFields } from './components/credit-card-fields'\nimport { usePaymentForm } from './hooks/use-payment-form'\n\nconst settings = getPaymentMethodData(GATEWAY_ID, {})\nconst isHostedFields = settings.integration_type === 'hosted-fields'\n\nconst defaultLabel = __('DNA Payments', TEXT_DOMAIN)\nconst label = decodeEntities(settings?.title || '') || defaultLabel\n\n/**\n * Content component\n */\nconst Content = (props) => {\n    const [isLoaded, setLoaded] = useState(false)\n    const [hostedFieldsInstance, setHostedFieldsInstance] = useState(null)\n\n    usePaymentForm({ props, hostedFieldsInstance })\n\n    const isEditor = !!select('core/editor')\n    // Don't render anything if we're in the editor.\n    if (isEditor) {\n        return null\n    }\n\n    if (isHostedFields) {\n        return (\n            <DnapaymentsCreditCardFields\n                props={props}\n                isLoaded={isLoaded}\n                hostedFieldsInstance={hostedFieldsInstance}\n                onLoad={(instance) => {\n                    setHostedFieldsInstance(instance)\n                    setLoaded(true)\n                }}\n            />\n        )\n    }\n\n    return <RawHTML>{decodeEntities(settings.description || '')}</RawHTML>\n}\n\n/**\n * Label component\n *\n * @param {*} props Props from payment API.\n */\nconst Label = (props) => {\n    const { PaymentMethodLabel } = props.components\n    return <PaymentMethodLabel text={label} />\n}\n\n/**\n * DNA Payments payment method config object.\n */\nconst dnapaymentsPaymentMethod = {\n    name: GATEWAY_ID,\n    label: <Label />,\n    content: <Content />,\n    edit: <Content />,\n    canMakePayment: () => true,\n    savedTokenComponent: <Content />,\n    ariaLabel: label,\n    supports: {\n        showSavedCards: isHostedFields,\n        showSaveOption: isHostedFields,\n        features: settings?.supports ?? [],\n    },\n    placeOrderButtonLabel: __('Pay with DNA Payments', TEXT_DOMAIN),\n}\n\nregisterPaymentMethod(dnapaymentsPaymentMethod)\n"],"names":["__","useState","useEffect","useRef","ValidationInputError","HOSTED_FIELD_IDS","TEXT_DOMAIN","getDnaPaymentsSettingsData","createHostedFields","createModal","setPlaceOrderButtonDisabled","DnapaymentsCreditCardFields","props","isLoaded","hostedFieldsInstance","onLoad","components","LoadingMask","token","mounted","threeDSRef","isCvvTokenVisible","setIsCvvTokenVisible","error","setError","name","number","expirationDate","cvv","setupIntegration","isTestMode","tempToken","cards","selectedCard","find","c","String","id","current","threeDS","isTest","accessToken","threeDSModal","domElements","document","getElementById","expDate","cvvToken","cvvState","getTokenizedCardCvvState","selectCard","setTimeout","destroy","remove","createElement","isLoading","showSpinner","className","style","display","htmlFor","errorMessage","GATEWAY_ID","GATEWAY_ID_GOOGLE_PAY","GATEWAY_ID_APPLE_PAY","GATEWAY_ID_CREDIT_CARD","CONTAINER_IDS","googlepay","applepay","logError","tryParse","usePaymentForm","emitResponse","eventRegistration","onCheckoutSuccess","shouldSavePayment","integrationType","allowSavingCards","handler","processingResponse","paymentDetails","Promise","resolve","paymentData","auth","merchantCustomData","returnUrl","paymentSettings","window","DNAPayments","configure","submit","JSON","stringify","storeCardOnFile","access_token","then","type","responseTypes","SUCCESS","messageContext","noticeContexts","PAYMENTS","location","href","catch","err","message","code","clear","ERROR","events","cancelled","paid","declined","openPaymentIframeWidget","openPaymentPage","fields","cardholderName","container","placeholder","cardNumber","tokenizedCardCvv","options","styles","input","opacity","styleConfig","containerClasses","FOCUSED","INVALID","fontNames","threeDSecure","body","dnaPayments","hostedFields","create","on","fieldKey","fieldsState","fieldContainer","isEmpty","classList","toggle","data","show","hide","Error","modalContainer","modal","modalBody","appendChild","add","getPaymentMethodData","settings","is_test_mode","integration_type","temp_token","terminalId","terminal_id","allow_saving_cards","args","console","logData","log","isDisabled","placeOrderButton","getPlaceOrderButton","setAttribute","removeAttribute","triggerPlaceOrderButtonClick","click","querySelector","str","parse","registerPaymentMethod","select","RawHTML","decodeEntities","isHostedFields","defaultLabel","label","title","Content","setLoaded","setHostedFieldsInstance","isEditor","instance","description","Label","PaymentMethodLabel","text","dnapaymentsPaymentMethod","content","edit","canMakePayment","savedTokenComponent","ariaLabel","supports","showSavedCards","showSaveOption","features","_settings$supports","placeOrderButtonLabel"],"sourceRoot":""}