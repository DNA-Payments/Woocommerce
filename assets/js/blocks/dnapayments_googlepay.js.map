{"version":3,"file":"dnapayments_googlepay.js","mappings":"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","sources":["webpack://wc-dnapayments/./client/blocks/components/error-message.js","webpack://wc-dnapayments/./client/blocks/components/payment-component.js","webpack://wc-dnapayments/./client/blocks/constants.js","webpack://wc-dnapayments/./client/blocks/utils/fetch_payment_and_auth_data.js","webpack://wc-dnapayments/./client/blocks/utils/get_payment_data.js","webpack://wc-dnapayments/./client/blocks/utils/get_settings.js","webpack://wc-dnapayments/./client/blocks/utils/log.js","webpack://wc-dnapayments/./client/blocks/utils/place-order-button.js","webpack://wc-dnapayments/external window \"React\"","webpack://wc-dnapayments/external window [\"wc\",\"wcBlocksRegistry\"]","webpack://wc-dnapayments/external window [\"wc\",\"wcSettings\"]","webpack://wc-dnapayments/external window [\"wp\",\"data\"]","webpack://wc-dnapayments/external window [\"wp\",\"element\"]","webpack://wc-dnapayments/external window [\"wp\",\"htmlEntities\"]","webpack://wc-dnapayments/external window [\"wp\",\"i18n\"]","webpack://wc-dnapayments/webpack/bootstrap","webpack://wc-dnapayments/webpack/runtime/compat get default export","webpack://wc-dnapayments/webpack/runtime/define property getters","webpack://wc-dnapayments/webpack/runtime/hasOwnProperty shorthand","webpack://wc-dnapayments/webpack/runtime/make namespace object","webpack://wc-dnapayments/./client/blocks/googlepay.js"],"sourcesContent":["const errorNoticeClass = 'wc-block-components-notice-banner is-error'\n\nexport const ErrorMessage = ({ messages = [] }) => {\n    return messages.map((message, i) => (\n        <div className={errorNoticeClass} key={i}>\n            {message}\n        </div>\n    ))\n}\n","import { useEffect, useRef, useState } from '@wordpress/element'\nimport { __ } from '@wordpress/i18n'\n\nimport { TEXT_DOMAIN } from '../constants'\nimport { ErrorMessage } from './error-message'\nimport { fetchPaymentAndAuthData } from '../utils/fetch_payment_and_auth_data'\nimport { logData, logError } from '../utils/log'\nimport { setPlaceOrderButtonDisabled, triggerPlaceOrderButtonClick } from '../utils/place-order-button'\n\nexport const PaymentComponent = ({ containerId, componentInstance, gatewayId, errorMessage, props }) => {\n    const {\n        components: { LoadingMask },\n    } = props\n\n    const [loadingState, setLoadingState] = useState('idle')\n    const [messages, setMessages] = useState([])\n\n    // pay button container\n    const containerRef = useRef()\n    // process payment result\n    const paymentResultRef = useRef()\n\n    const {\n        emitResponse,\n        eventRegistration: { onPaymentSetup },\n    } = props\n\n    useEffect(() => {\n        const handler = async () => {\n            if (paymentResultRef.current?.success) {\n                return {\n                    type: emitResponse.responseTypes.SUCCESS,\n                    meta: {\n                        paymentMethodData: {\n                            [`wc-${gatewayId}-result`]: JSON.stringify(paymentResultRef.current),\n                        },\n                    },\n                }\n            }\n\n            return {\n                type: emitResponse.responseTypes.ERROR,\n                message: __('Your payment proccess has been failed.', TEXT_DOMAIN),\n                messageContext: emitResponse.noticeContexts.PAYMENTS,\n            }\n        }\n\n        return onPaymentSetup(handler)\n    }, [onPaymentSetup, emitResponse])\n\n    useEffect(() => {\n        const setupIntegration = async () => {\n            setLoadingState('loading')\n            const { paymentData, auth } = await fetchPaymentAndAuthData(props)\n\n            paymentResultRef.current = null\n\n            componentInstance.create(\n                containerRef.current,\n                paymentData,\n                {\n                    onClick: () => {\n                        setLoadingState('loading')\n                    },\n                    onPaymentSuccess: (result) => {\n                        setLoadingState('done')\n                        logData('onPaymentSuccess', result)\n                        paymentResultRef.current = result\n                        triggerPlaceOrderButtonClick()\n                    },\n                    onCancel: () => {\n                        setLoadingState('done')\n                    },\n                    onError: (err) => {\n                        logError('onError', err)\n\n                        let message =\n                            err.message ||\n                            __(\n                                'Your card has not been authorised, please check the details and retry or contact your bank.',\n                                TEXT_DOMAIN,\n                            )\n\n                        if (\n                            errorMessage &&\n                            (err.code === 1002 || // Failed to initialize the Google / Apple Pay button\n                                err.code === 1003) // Failed to validate the Google / Apple Pay button\n                        ) {\n                            message = errorMessage\n                        }\n\n                        setLoadingState('failed')\n                        setMessages([message])\n                    },\n                    onLoad: () => {\n                        setLoadingState('done')\n                    },\n                },\n                auth.access_token,\n            )\n        }\n\n        if (containerRef.current && componentInstance) {\n            setupIntegration()\n        }\n    }, [componentInstance, containerRef, props.billing.cartTotal.value])\n\n    // if payment gateway selected, disable place order button\n    useEffect(() => {\n        setPlaceOrderButtonDisabled(true)\n        return () => setPlaceOrderButtonDisabled(false)\n    }, [])\n\n    return (\n        <>\n            <ErrorMessage messages={messages} />\n            <LoadingMask isLoading={loadingState === 'loading'} showSpinner={true}>\n                <div ref={containerRef} id={containerId}></div>\n            </LoadingMask>\n        </>\n    )\n}\n","export const GATEWAY_ID = 'dnapayments'\nexport const GATEWAY_ID_GOOGLE_PAY = 'dnapayments_google_pay'\nexport const GATEWAY_ID_APPLE_PAY = 'dnapayments_apple_pay'\nexport const GATEWAY_ID_CREDIT_CARD = 'dnapayments_credit_card'\n\nexport const TEXT_DOMAIN = 'woocommerce-gateway-dna'\n\nexport const HOSTED_FIELD_IDS = {\n    number: `wc-${GATEWAY_ID}-card-number-hosted`,\n    name: `wc-${GATEWAY_ID}-card-name-hosted`,\n    expDate: `wc-${GATEWAY_ID}-expiry-hosted`,\n    cvv: `wc-${GATEWAY_ID}-csc-hosted`,\n    cvvToken: `wc-${GATEWAY_ID}-csc-token-hosted`,\n    threeDS: 'three-d-secure',\n}\n\nexport const CONTAINER_IDS = {\n    googlepay: 'dnapayments_google_pay_container',\n    applepay: 'dnapayments_apple_pay_container',\n}\n","import { getPaymentData } from './get_payment_data'\n\nexport async function fetchPaymentAndAuthData(props) {\n    const paymentData = getPaymentData(props)\n\n    const formData = new FormData()\n    formData.append('order_id', paymentData.invoiceId)\n    formData.append('total', paymentData.amount)\n\n    const response = await fetch('/wp-admin/admin-ajax.php?action=get_payment_and_auth_data', {\n        method: 'POST',\n        body: formData,\n    })\n\n    const result = await response.json()\n\n    return {\n        auth: result.auth,\n        paymentData: {\n            ...result.paymentData,\n            ...paymentData,\n            invoiceId: result.paymentData.invoiceId,\n            paymentSettings: result.paymentData.paymentSettings,\n        },\n    }\n}\n","import { select } from '@wordpress/data'\n\nimport { getDnaPaymentsSettingsData } from './get_settings'\n\nexport function getPaymentData(props) {\n    const { billing, shippingData } = props\n    const { terminalId } = getDnaPaymentsSettingsData()\n\n    return {\n        invoiceId: getOrderId(),\n        amount: getAmount(billing.cartTotal.value, props),\n        customerDetails: {\n            email: billing.billingAddress.email,\n            accountDetails: {\n                accountId: billing.customerId ? String(billing.customerId) : undefined,\n            },\n            billingAddress: getAddress(billing.billingAddress),\n            deliveryDetails: {\n                deliveryAddress: getAddress(shippingData.shippingAddress),\n            },\n        },\n        paymentSettings: {\n            terminalId,\n        },\n    }\n}\n\nexport function getAmount(amount, { billing }) {\n    return amount / 10 ** billing.currency.minorUnit\n}\n\nexport function getAddress(address) {\n    return {\n        firstName: address.first_name,\n        lastName: address.last_name,\n        addressLine1: address.address_1,\n        addressLine2: address.address_2,\n        city: address.city,\n        postalCode: address.postcode,\n        phone: address.phone,\n        country: address.country,\n    }\n}\n\nexport function getOrderId() {\n    const { CHECKOUT_STORE_KEY } = window.wc.wcBlocksData\n    const store = select(CHECKOUT_STORE_KEY)\n\n    return store.getOrderId()\n}\n","import { getPaymentMethodData } from '@woocommerce/settings'\n\nimport { GATEWAY_ID } from '../constants'\n\nexport const getDnaPaymentsSettingsData = () => {\n    const settings = getPaymentMethodData(GATEWAY_ID, {})\n    return {\n        isTestMode: settings.is_test_mode,\n        integrationType: settings.integration_type,\n        tempToken: settings.temp_token,\n        terminalId: settings.terminal_id,\n        allowSavingCards: settings.allow_saving_cards,\n        cards: settings.cards,\n    }\n}\n","export function logError(...args) {\n    console.error(...args)\n}\n\nexport function logData(...args) {\n    console.log(...args)\n}\n","export function setPlaceOrderButtonDisabled(isDisabled) {\n    const placeOrderButton = getPlaceOrderButton()\n\n    if (!placeOrderButton) {\n        return\n    }\n\n    if (isDisabled) {\n        placeOrderButton.setAttribute('disabled', 'disabled')\n    } else {\n        placeOrderButton.removeAttribute('disabled')\n    }\n}\n\nexport function triggerPlaceOrderButtonClick() {\n    const placeOrderButton = getPlaceOrderButton()\n\n    if (placeOrderButton) {\n        placeOrderButton.removeAttribute('disabled')\n        placeOrderButton.click()\n    }\n}\n\nexport function getPlaceOrderButton() {\n    return document.querySelector('button.wc-block-components-checkout-place-order-button')\n}\n","module.exports = window[\"React\"];","module.exports = window[\"wc\"][\"wcBlocksRegistry\"];","module.exports = window[\"wc\"][\"wcSettings\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * External dependencies\n */\nimport { registerPaymentMethod } from '@woocommerce/blocks-registry'\nimport { __ } from '@wordpress/i18n'\nimport { getPaymentMethodData } from '@woocommerce/settings'\nimport { decodeEntities } from '@wordpress/html-entities'\nimport { RawHTML } from '@wordpress/element'\n\n/**\n * Internal dependencies\n */\nimport { CONTAINER_IDS, GATEWAY_ID_GOOGLE_PAY, TEXT_DOMAIN } from './constants'\nimport { PaymentComponent } from './components/payment-component'\n\nconst settings = getPaymentMethodData(GATEWAY_ID_GOOGLE_PAY, {})\nconst defaultLabel = __('Google Pay by DNA Payments', TEXT_DOMAIN)\nconst label = decodeEntities(settings?.title || '') || defaultLabel\n\nconst Label = (props) => {\n    const { PaymentMethodLabel } = props.components\n    return <PaymentMethodLabel text={label} />\n}\n\n/**\n * Content component\n */\nconst Content = (props) => {\n    return <RawHTML>{decodeEntities(settings.description || '')}</RawHTML>\n}\n\n/**\n * Google pay button\n */\nconst GooglePayButton = (props) => {\n    return (\n        <PaymentComponent\n            componentInstance={window.DNAPayments.GooglePayComponent}\n            gatewayId={GATEWAY_ID_GOOGLE_PAY}\n            containerId={CONTAINER_IDS.googlepay}\n            errorMessage={__('Google Pay payments are not supported in your current browser.', TEXT_DOMAIN)}\n            props={props}\n        />\n    )\n}\n\n/**\n */\nconst dnapaymentsGooglePayPaymentMethod = {\n    name: GATEWAY_ID_GOOGLE_PAY,\n    label: <Label />,\n    content: <GooglePayButton />,\n    edit: <Content />,\n    canMakePayment: () => true,\n    ariaLabel: label,\n    supports: {\n        features: settings?.supports ?? [],\n    },\n    placeOrderButtonLabel: label,\n}\n\nregisterPaymentMethod(dnapaymentsGooglePayPaymentMethod)\n"],"names":["errorNoticeClass","ErrorMessage","messages","map","message","i","createElement","className","key","useEffect","useRef","useState","__","TEXT_DOMAIN","fetchPaymentAndAuthData","logData","logError","setPlaceOrderButtonDisabled","triggerPlaceOrderButtonClick","PaymentComponent","containerId","componentInstance","gatewayId","errorMessage","props","components","LoadingMask","loadingState","setLoadingState","setMessages","containerRef","paymentResultRef","emitResponse","eventRegistration","onPaymentSetup","handler","current","success","type","responseTypes","SUCCESS","meta","paymentMethodData","JSON","stringify","ERROR","messageContext","noticeContexts","PAYMENTS","setupIntegration","paymentData","auth","create","onClick","onPaymentSuccess","result","onCancel","onError","err","code","onLoad","access_token","billing","cartTotal","value","Fragment","isLoading","showSpinner","ref","id","GATEWAY_ID","GATEWAY_ID_GOOGLE_PAY","GATEWAY_ID_APPLE_PAY","GATEWAY_ID_CREDIT_CARD","HOSTED_FIELD_IDS","number","name","expDate","cvv","cvvToken","threeDS","CONTAINER_IDS","googlepay","applepay","getPaymentData","formData","FormData","append","invoiceId","amount","response","fetch","method","body","json","paymentSettings","select","getDnaPaymentsSettingsData","shippingData","terminalId","getOrderId","getAmount","customerDetails","email","billingAddress","accountDetails","accountId","customerId","String","undefined","getAddress","deliveryDetails","deliveryAddress","shippingAddress","currency","minorUnit","address","firstName","first_name","lastName","last_name","addressLine1","address_1","addressLine2","address_2","city","postalCode","postcode","phone","country","CHECKOUT_STORE_KEY","window","wc","wcBlocksData","store","getPaymentMethodData","settings","isTestMode","is_test_mode","integrationType","integration_type","tempToken","temp_token","terminal_id","allowSavingCards","allow_saving_cards","cards","args","console","error","log","isDisabled","placeOrderButton","getPlaceOrderButton","setAttribute","removeAttribute","click","document","querySelector","registerPaymentMethod","decodeEntities","RawHTML","defaultLabel","label","title","Label","PaymentMethodLabel","text","Content","description","GooglePayButton","DNAPayments","GooglePayComponent","dnapaymentsGooglePayPaymentMethod","content","edit","canMakePayment","ariaLabel","supports","features","_settings$supports","placeOrderButtonLabel"],"sourceRoot":""}